name: Build CUPS Image
on: workflow_dispatch
jobs:
  build-cups-image:
    runs-on: ubuntu-latest
    steps:
      # - name: Checkout a specific tag CUPS sources
      #   uses: actions/checkout@v4
      #   with:
      #    repository: OpenPrinting/cups
      #    ref: v2.4.12
      #    path: sources

      - name: Download CUPS asset from a specific release version
        uses: robinraju/release-downloader@v1.12
        with:
          repository: OpenPrinting/cups
          tag: v2.4.12
          fileName: cups-2.4.12-source.tar.gz

      - name: Extract compressed files 
        run: |
          ls -al
          tar -xf cups-2.4.12-source.tar.gz
          mv cups-2.4.12 sources
          ls -al

      - name: Checkout Dockerfile
        uses: actions/checkout@v4
        with:
          # repository: OpenPrinting/cups #  on CUPS master branch
          path: dockerfile
          # sparse-checkout: |
          #   Dockerfile
          # sparse-checkout-cone-mode: false

      - name: List files in the sources directory
        run: |
          cd sources
          ls -al
      
      - name: List files in the dockerfile directory
        run: |
          cd dockerfile
          ls -al

      - name: Copy Dockerfile from dockerfile to sources
        run: |
          cp ./dockerfile/Dockerfile ./sources
          cp ./dockerfile/.dockerignore ./sources
          cp ./dockerfile/entrypoint.sh ./sources

      - name: Building CUPS Docker image
        run: |
          image_name="cups"
          image_tag="2.4.12"
          image="${image_name}:${image_tag}"
          image_zip="${image_name}-${image_tag}"
          docker build -t "${image}" .
          docker save "${image}" -o "${image_zip}-amd64.tar"
          gzip -c "${image_zip}-amd64.tar" > "${image_zip}-amd64.tar.gz"
          rm "${image_zip}-amd64.tar"
        working-directory: ./sources

      - name: List generated files (debug step)
        run: |
          echo "Preparing docker images list (.tar.gz) files:"
          find $GITHUB_WORKSPACE -name "*.tar.gz"
          release_name=$(TZ="Asia/Shanghai" date +'%Y-%m-%d %H:%M Build')
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@master
        with:
          tag_name: CUPS-DOCKER-IMAGE-AMD64
          name: ${{ env.RELEASE_NAME }} for x86-64
          body: |
            [![Github](https://img.shields.io/badge/RELEASE:DockerTarBuilder-123456?logo=github&logoColor=fff&labelColor=green&style=for-the-badge)](https://www.bilibili.com/video/BV1EZ421M7mL) [![Github](https://img.shields.io/badge/ÂõΩÂÜÖÂä†ÈÄüÁ´ô‰∏ãËΩΩ-FC7C0D?logo=github&logoColor=fff&labelColor=000&style=for-the-badge)](https://wkdaily.cpolar.top/archives/1)
            ### How to use? For example
            `docker load -i alpine_latest.tar.gz `
            ### Video teaching
            [![Bilibili](https://img.shields.io/badge/Bilibili-123456?logo=bilibili&logoColor=fff&labelColor=fb7299)](https://www.bilibili.com/video/BV1yyq6YREdF)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Docker images as release assets
        uses: softprops/action-gh-release@v2.1.0
        with:
          tag_name: CUPS-DOCKER-IMAGE-AMD64
          files: ${{ github.workspace }}/sources/*.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - run: echo "üçè This job's status is ${{ job.status }}."